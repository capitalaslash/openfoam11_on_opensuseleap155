// /*--------------------------------*- C++ -*----------------------------------*\
//   =========                 |
//   \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
//    \\    /   O peration     | Website:  https://openfoam.org
//     \\  /    A nd           | Version:  11
//      \\/     M anipulation  |
// \*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volScalarField;
    location    "0";
    object      epsilon;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


dimensions      [0 2 -3 0 0 0 0];

internalField   uniform 0.00754;

boundaryField
{
    bottomWall
    {
        type            epsilonWallFunction;
        value           $internalField;
    }
    topWall
    {
        type            epsilonWallFunction;
        value           $internalField;
    }
    sides1_half0
    {
        type            cyclic;
    }
    sides2_half0
    {
        type            cyclic;
    }
    inout1_half0
    {
        type            cyclic;
//         type            turbulentMixingLengthFrequencyInlet;
//         mixingLength    0.1;
//         value           $internalField;
    }
    inout2_half0
    {
        type            cyclic;
//         type            turbulentMixingLengthFrequencyInlet;
//         mixingLength    1;
//         value           $internalField;
    }
    sides2_half1
    {
        type            cyclic;
    }
    sides1_half1
    {
        type            cyclic;
    }
    inout1_half1
    {
        type            cyclic;
//         type            zeroGradient;


    }
    inout2_half1
    {
        type            cyclic;
//         type            zeroGradient;
    }
}



// boundaryField
// {
//     movingWall
//     {
//         type            epsilonWallFunction;
//         value           uniform 0.00754;
//     }
//     fixedWalls
//     {
//         type            epsilonWallFunction;
//         value           uniform 0.00754;
//     }
//     frontAndBack
//     {
//         type            empty;
//     }
// }


// ************************************************************************* //
